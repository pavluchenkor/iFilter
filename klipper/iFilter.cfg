[heater_generic chamber]
heater_pin: HE2
max_power: 1.0
sensor_type: NTC 100K MGB18-104F39050L32
sensor_pin: TB
control: pid
min_temp: 0
max_temp: 120
# PID_CALIBRATE HEATER=chamber TARGET=100
pid_Kp=22.619 
pid_Ki=3.208 
pid_Kd=39.866
# gcode_id: C

[verify_heater chamber]
max_error: 300
check_gain_time: 480
hysteresis: 5
heating_gain: 1

[fan_generic iFilter]
pin: FAN4

[temperature_sensor Chamber]
sensor_pin: T3
sensor_type: EPCOS 100K B57560G104F

[gcode_macro M141]
gcode:
   SET_HEATER_TEMPERATURE HEATER=chamber TARGET={params.S}

[gcode_macro M191]
gcode:
   SET_HEATER_TEMPERATURE HEATER=chamber TARGET={params.S}
  #  TEMPERATURE_WAIT SENSOR="heater_generic chamber" MINIMUM={params.S}


[delayed_gcode _check_chamber_temp]
initial_duration: 5.
gcode:
  {% if printer['temperature_sensor Chamber'].temperature < mainStart.var.temp.bed.target %}
    SET_HEATER_TEMPERATURE HEATER=chamber TARGET=30
  {% else %}
    SET_HEATER_TEMPERATURE HEATER=chamber TARGET={mainStart.var.temp.bed.target|int / 2 }
    UPDATE_DELAYED_GCODE ID=MAIN_PRINT_WAIT DURATION=5
  {% endif %}
  UPDATE_DELAYED_GCODE ID=report_temp DURATION=5



[idle_timeout]
gcode:
#   A list of G-Code commands to execute on an idle timeout. See
#   docs/Command_Templates.md for G-Code format. The default is to run
#   "TURN_OFF_HEATERS" and "M84".
timeout: 600
#   Idle time (in seconds) to wait before running the above G-Code
#   commands. The default is 600 seconds.

# UPDATE_DELAYED_GCODE ID=filter_off DURATION=180
[delayed_gcode filter_off]
gcode:
    SET_FAN_SPEED FAN=iFilter SPEED=0

[gcode_macro TOGGLE_IFILTER]
gcode:
    {% if printer['fan_generic iFilter'].speed > 0 %}
      SET_FAN_SPEED FAN=iFilter SPEED=0
    {% else %}
      SET_FAN_SPEED FAN=iFilter SPEED=1
    {% endif %}


[gcode_macro TOGGLE_CHAMBER_HEAT]
gcode:
    {% set temp = params.CHAMBER_TEMP|default(90)|int %} 
    {% set speed = params.CHAMBER_FAN_SPEED|default(70)|float / 100%} 
    {% if printer['fan_generic iFilter'].speed > 0 %}
      SET_IDLE_TIMEOUT TIMEOUT=600
      SET_HEATER_TEMPERATURE HEATER=chamber TARGET=0
      UPDATE_DELAYED_GCODE ID=filter_off DURATION=240
    {% else %}
      SET_IDLE_TIMEOUT TIMEOUT=18000
      SET_FAN_SPEED FAN=iFilter SPEED={speed}
      SET_HEATER_TEMPERATURE HEATER=chamber TARGET={temp}
    {% endif %}


# [menu __main __control __ifilteronoff]
# type: command
# name: iFilter {'ON' if printer['fan_generic iFilter'].speed > 0 else 'OFF'}
# enable: {'fan_generic iFilter' in printer}
# gcode:
#     TOGGLE_IFILTER

# [menu __main __control __filterspeed]
# type: input
# enable: {'fan_generic iFilter' in printer}
# name: Filter %: {'%3d' % (menu.input*100)}%
# input: {printer["fan_generic iFilter"].speed}
# input_min: 0
# input_max: 1
# input_step: 0.1
# gcode:
#     SET_FAN_SPEED FAN=iFilter SPEED={menu.input}
